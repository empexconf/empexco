<section class="presentation">
    <div class="presentation-presenter">
        <div class="presentation-presenter__avatar-container">
            <img src="/assets/images/people/presenters/andrea-leopardi.jpg" class="presentation-presenter__avatar" alt="Andrea Leopardi" />
        </div>

        <h4 class="presentation-presenter__name">Andrea Leopardi</h4>

        <p class="presentation-presenter__link"><a href="https://twitter.com/whatyouhide">@whatyouhide</a></p>
        </br>
        <div class="presentation-presenter__avatar-container">
            <img src="/assets/images/people/presenters/eric-meadows-jonsson.jpg" class="presentation-presenter__avatar" alt="Eric Meadows-Jönsson" />
        </div>

        <h4 class="presentation-presenter__name">Eric Meadows-Jönsson</h4>

        <!-- <p class="presentation-presenter__link"><a href="https://twitter.com/whatyouhide">@whatyouhide</a></p> -->
    </div>

    <div class="presentation__details">
        <h3 class="presentation__title">Parallel Computation with Elixir</h3>
        <div class="presentation__description">
          <p>
          Elixir provides a few tools to parallelize computation and parallel processing of collections in particular. These tools operate at different levels of abstraction and complexity. On one end, you can manually spawn processes to do work and manually collect results; on the other end, you can use more complex tools like GenStage and Flow. The choice of tool depends on the situation at hand.
          </p><p>
          In this training, we want to explore the tools available for parallel computation, alongside their use cases and their strength and weaknesses. We will start from the simplest approach of manually spawning processes, move on to tasks and Task.async_stream, and finally work with GenStage and Flow.
          </p><p>
          This tutorial is aimed for people that are familiar with Elixir syntax and with the &quot;functional&quot; and data-related part of Elixir (data types, modules, functions). Knowledge about processes is welcome, but we are prepared to introduce concurrency in Elixir in case the audience is not strong on the area.
          </p>
        </div>
        <div class="presentation__bio">
            <p><strong>About Andrea:</strong> Andrea is a programming enthusiast with a soft spot for functional programming and beautiful code. He loves learning new stuff. He strongly believes in accessible culture and education and in open-source software. He&apos;s active in the Elixir community and uses almost exclusively Elixir for work purposes.</p>
            <p><strong>About Eric:</strong> Eric Meadows-Jönsson is a member of the Elixir team and an active member of the Elixir community being the creator of many libraries, including Ecto and the Hex package manager. Eric works as a Software Engineer at Cabify.</p>
        </div>
    </div>
</section>
