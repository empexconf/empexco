<section class="presentation" id="meryl-dakin">
    <div class="presentation-presenter">
        <div class="presentation-presenter__avatar-container">
          <img src="/assets/images/people/presenters/meryl-dakin.jpg"
               class="presentation-presenter__avatar"
               alt="Meryl Dakin headshot" />
        </div>

        <h4 class="presentation-presenter__name">Meryl Dakin</h4>

        <p class="presentation-presenter__link">
          <a href="https://twitter.com/meryldakin">@meryldakin</a>
        </p>
    </div>

    <div class="presentation__details">
        <h3 class="presentation__title">Process Potential: Multitasking and fault tolerance in Elixir</h3>
        <div class="presentation__description">
          <p>
            Much of Elixir's hype has flowed around OTP: the concurrency and parallelism that promises multitasking at lightning speeds. However for newcomers to the language, the tools that enable this can be hard to visualize and intimidating to implement.
          </p><p>
            We'll start with processes and work up to GenServers. We'll take a look at a truly practical example of GenServers: an app that deploys hundreds of repos to Github Enterprise at once for students to use as lessons while maintaining global state. We'll delve into how it orchestrates the process with parallelism and fault tolerance. Both developers from OO backgrounds and those currently working in Elixir will gain a new comfort with the building blocks of multitasking and how to use them to their potential.
          </p>
        </div>
        <div class="presentation__bio">
          <p><strong>About Meryl: </strong>
            Meryl Dakin is a full stack web developer living in Brooklyn. She is a former instructor for the Flatiron School and volunteers with Code Nation. She has written several blog posts and made a small number of cartoons on various programming topics.
          </p>
        </div>
    </div>
</section>

