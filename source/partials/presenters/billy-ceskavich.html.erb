<section class="presentation" id="billy-ceskavich">
    <div class="presentation-presenter">
        <div class="presentation-presenter__avatar-container">
          <img src="/assets/images/people/presenters/billy-ceskavich.jpg"
               class="presentation-presenter__avatar"
               alt="Billy Ceskavich headshot" />
        </div>

        <h4 class="presentation-presenter__name">Billy Ceskavich</h4>

        <p class="presentation-presenter__link">
          <a href="https://twitter.com/ceskavich">@ceskavich</a>
        </p>
    </div>

    <div class="presentation__details">
      <h3 class="presentation__title">
        Is Elixir Just Lisp? Demystifying Metaprogramming in Elixir and Beyond
      </h3>
        <div class="presentation__description">
          <p>
            Metaprogramming is a powerful tool that many Elixir developers
            use every day. Via macros, we can write concise, reusable code,
            and even extend the language itself. But, metaprogramming in
            Elixir can be hard to grok, especially for newcomers. So in
            this talk, we’re going to review the inner workings of Elixir’s
            metaprogramming environment. We’ll start with a quick syntax
            review, and discuss in plain terms what the core components do for
            you. Then, we’ll talk about the essence of macros: modifying
            Elixir’s Abstract Syntax Tree to reshape your code at compile
            time. And finally, we’ll compare Elixir’s macros to metaprogramming
            approaches taken in other languages. Whether you’re new to
            Elixir or a seasoned developer, you should leave this talk with a
            clearer understanding of how this powerful set of Elixir
            abstractions works and how you can use it all confidently in your
            next project.
          </p>
        </div>
        <div class="presentation__bio">
          <p><strong>About Billy: </strong>
            Billy is a software engineer based in Brooklyn, NY. He works at
            Frame.io, where he wrangles Elixir and JavaScript to help build
            their developer platform. He wrote his first Elixir program in
            2016 and started writing Elixir full-time in November 2018.
            When he's not writing code, he's probably baking or hanging out
            with his cat.
          </p>
        </div>
    </div>
</section>

